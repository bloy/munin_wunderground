#!/usr/bin/python

import sys
import os
import os.path

code = sys.argv[0][(sys.argv[0].rfind('_') + 1):]
code = code.upper()
mode = 'airport'
urls = {
    'airport' : 'http://api.wunderground.com/auto/wui/geo/WXCurrentObXML/index.xml?query={0}',
    'pws' : 'http://api.wunderground.com/weatherstation/WXCurrentObXML.asp?ID={0}'
}
cachedir = os.getenv('cachedir', '/var/lib/munin/plugin-state/')
cacheseconds = os.getenv('cacheseconds', 1800)
cachebasefile = 'plugin-wunderground_{0}.state'.format(code)
cachefile = os.path.join(cachedir, cachebasefile)

if len(code) < 3:
    raise ValueError, code
elif len(code) <= 4:
    mode = 'airport'
else:
    mode = 'pws'

url = urls[mode].format(code)

if len(sys.argv) == 2 and sys.argv[1] == "autoconf":
    print "yes"
elif len(sys.argv) == 2 and sys.argv[1] == "config":
    print """multigraph temperature
graph_title Temperatures at {0}
graph_vlabel degrees F
graph_order temp feelslike dewpoint
graph_category weather
graph_scale no

multigraph humidity
graph_title Relative Humidity at {0}
graph_vlabel Relative Humidity (%)
graph_category weather
graph_scale no
graph_args --lower-limit 0 --upper-limit 100 --rigid

multigraph pressure
graph_title Atmospheric Pressure at {0}
graph_category weather
graph_vlabel Pressure (mb)

multigraph precip
graph_title Precipitation at {0}
graph_category weather
graph_vlabel Inches per hour
""".format(code)
else:
    print "cachefile: {0}\ncacheseconds: {1}\nurl: {2}".format(
        cachefile, cacheseconds, url)
